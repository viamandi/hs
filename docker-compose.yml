version: '3.8'

services:
  # Serviciul pentru compilarea aplicației Spring
  spring-builder:
    image: eclipse-temurin:21-jdk
    container_name: spring-builder
    working_dir: /app
    volumes:
      - ./build-output:/app/target
    command: >
      sh -c "
        rm -fr /app/target/* &&
        apt-get update && apt-get install -y git &&
        rm -fr ./hs &&
        git clone https://github.com/viamandi/hs.git &&
        cd hs &&
        apt-get --only-upgrade install maven &&
        chmod +x ./mvnw &&
        ./mvnw clean package -DskipTests &&
        cp target/*.jar /app/target/
      "
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "test", "-f", "/app/target/*.jar"]
      interval: 10s
      timeout: 5s
      retries: 5

 # Serviciul pentru aplicația Spring
  spring-app:
    image: eclipse-temurin:21-jdk
    container_name: spring-app
    working_dir: /app
    ports:
      - "8081:8081"  # Schimbă portul dacă aplicația rulează pe alt port
    volumes:
      - ./build-output:/app/target
    command: >
      sh -c "
        while [ ! -f /app/target/*.jar ]; do
          echo 'Waiting for build to complete...'
          sleep 5
        done &&
        echo 'Build complete, starting application...' &&
        java -jar /app/target/*.jar
      "
    networks:
      - app-network
    depends_on:
      spring-builder:
        condition: service_completed_successfully
      hivemq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: on-failure

  # Serviciul pentru baza de date PostgreSQL
  postgres:
    image: postgres:16
    container_name: postgres-db
    environment:
      - POSTGRES_DB=vehicle_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d vehicle_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviciul pentru HiveMQ (fără modificări)
  hivemq:
    image: hivemq/hivemq-edge
    container_name: hivemq-edge1
    ports:
      - "1883:1883"
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8080/api/v1/health/readiness || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  build-output:
  postgres-data: